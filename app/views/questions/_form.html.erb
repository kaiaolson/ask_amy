<% if !@question.errors.empty? %>
<div class="alert alert-danger"><%= @question.errors.full_messages.join(", ") %></div>
<% end %>

<%# for_for takes in an ActiveRecord object as a first argument. then it looks at the object. if the object is not persisted (not yet saved to db) The form will automatically use POST for its method. it will also automatically use 'questions_path' as its action (convention is that the questions_path will submit to the 'create' action) %>
<%= form_for @question do |f| %>
  <%# we call 'f' the form object %>
  <div class="form-group">
    <%= f.label :title %>
    <%= f.text_field :title, class: "form-control" %>
  </div>
  <div class="form-group">
    <%= f.label :body %>
    <%= f.text_area :body, class: "form-control" %>
  </div>
  <div class="form-group">
    <%= f.check_box :tweet_it %> Tweet It!
  </div>
  <div class="form-group">
    <%#= To assign a value to a foreign key using a dropdown menu  %>
    <%= f.label :category_id %>
    <%= f.collection_select(:category_id, Category.order("name"), :id, :name, html: {class: "form-control"}) %>
  </div>
  <div class="form-group">
    <%= f.collection_check_boxes(:tag_ids, Tag.order("name"), :id, :name) %>
  </div>
  <div class="form-group">
    <%= f.submit class: "btn btn-primary"%>
  </div>
<% end %>
